# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on: [push, pull_request]
#
#    # Allows you to run this workflow manually from the Actions tab
#    workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    # This workflow contains a single job called "build"
    build:
        # The type of runner that the job will run on
        runs-on: ubuntu-latest

        # Steps represent a sequence of tasks that will be executed as part of the job
        steps:
            # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
            - uses: actions/checkout@v2

#            - name: Run composer
#              uses: nick-zh/composer-php@master
#              env:
#                  GITHUB_WORKSPACE: /home/runner/work/bugs-light/bugs-light/src
#              with:
#                  action: 'install -oa'

            - name: php-codesniffer
                # You may pin to the exact commit or the version.
                # uses: pipeline-components/php-codesniffer@e3341450afba37fab4275b31f041646a26b2da9d
              uses: pipeline-components/php-codesniffer@v0.12.3
              with:
                  # Directory to check
                  directory: ./src
                  # Additional options
                  options: # optional, default is -s -p --colors --extensions=php

            - name: Psalm Security Scan
              uses: docker://ghcr.io/psalm/psalm-security-scan

            - name: Upload Security Analysis results to GitHub
              uses: github/codeql-action/upload-sarif@v1
              with:
                sarif_file: results.sarif

            - name: PHPUnit (php-actions)
                # You may pin to the exact commit or the version.
                # uses: php-actions/phpunit@a182eaa14350a89671a73588ac5f2d11e3e5ee81
              uses: php-actions/phpunit@v2
              with:
                  # What version of PHPUnit to use
                  version: # optional, default is latest
                  # What version of PHP to use
                  php_version: # optional, default is latest
                  # Space separated list of extensions to configure with the PHP build
                  php_extensions: # optional
                  # Configuration file location
                  configuration: # optional
                  # JUnit output file location
                  log_junit: # optional
                  # JUnit output file location
                  log_teamcity: # optional
                  # JUnit output file location
                  testdox_html: # optional
                  # JUnit output file location
                  testdox_text: # optional
                  # JUnit output file location
                  testdox_xml: # optional
                  # Memory limit
                  memory_limit: # optional
                  # Path to bootstrap file
                  bootstrap: # optional
                  # Filter which tests to run
                  filter: # optional
                  # Specify a testsuite to run
                  testsuite: # optional
                  # Only runs tests from the specified group(s)
                  group: # optional
                  # Exclude tests from the specified group(s)
                  exclude_group: # optional
                  # Only search for test in files with specified suffix(es)
                  test_suffix: # optional, default is Test.php,.phpt
                  # Path to directory to whitelist for code coverage analysis
                  whitelist: # optional
                  # Extra arguments to pass to the phpunit binary
                  args: # optional
